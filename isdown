#!/usr/bin/python3

from selectolax.parser import HTMLParser
import requests, sys, json, time
from selenium import webdriver
from selenium.webdriver.firefox.options import Options

OPTIONS = Options()
OPTIONS.headless = True
HOST = 'www.isitdownrightnow.com'

def displayHelp():
    helpStr = "Usage: isdown [SITE] [OPTION]\n\n" \
              "Queries isitdownrightnow.com to get status of SITE.\n\n" \
              "Options:\n" \
              "  -v, --verbose\t\t     display verbose output."
    print(helpStr)
    quit()

if __name__ == '__main__':
    if len(sys.argv) < 2 or '--help' in sys.argv or '-h' in sys.argv:
        displayHelp()
    else:
        domain = sys.argv[1]
        site = "https://%s/%s.html" % (HOST, domain)
        if requests.get(site).status_code != 404:
            print("Checking site status...\n")

            verbose = False
            if '--verbose' in sys.argv or '-v' in sys.argv:
                verbose = True

            driver = webdriver.Firefox(options=OPTIONS)
            driver.get(site)
            while 'Please wait while we check the server' in driver.page_source:
                time.sleep(0.5)
            html = driver.page_source
            driver.quit()

            try:
                server_data = HTMLParser(html).css(".serverdata")[0]
                arr = [x.text(separator='@@').split('@@') for x in server_data.iter()]
                arr = [[x[1], x[0]] for x in arr]
                status = arr[4][1]
                if verbose:
                    response_json = {'Status': status}
                    for pair in arr[1:4]:
                        response_json[pair[0][:-1]] = pair[1]
                    for field in response_json:
                        print("%-14s:\t%s" % (field, response_json[field]))
                else:
                    print(status)
            except IndexError:
                print("Error (Cannot parse response)" % domain)
        else:
            print("Error (Invalid site): %s" % domain)
        